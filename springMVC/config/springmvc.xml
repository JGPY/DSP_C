<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">	
	
	<!-- 配置Handler -->
	<bean id="itemsController1" name="/queryItems_test.action" class="vip.iotworld.controller.ItemsController1" />
	<!-- 配置另外一个Handler -->
	<bean id="itemsController2" class="vip.iotworld.controller.ItemsController2" />
			
	<!-- 对于注解的Handler可以单个配置
	实际开发中建议使用组件扫描
	 -->
	<!-- <bean class="vip.iotworld.controller.ItemsController3" /> -->
	<!-- 可以扫描controller、service、...
		这里让扫描controller，指定controller的包
		配置@Controller注解扫描
	 -->
	<context:component-scan base-package="vip.iotworld.controller"></context:component-scan>

	<!-- 如果没有显示的配置处理器适配器 和处理器适配器那么springMvc会去默认的/org/springframework/web/servlet/DispatcherServlet.properties中查找
	对应的处理器适配器和处理器映射器，这样每个请求都要扫描它默认的配置文件，这样效率低下，会降低访问速度。
	所以要显示的配置处理器适配器和处理器映射器。-->
 	<!--注解映射器 -->
<!-- 	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
 -->	
	<!--注解适配器 -->
<!-- 	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
 -->	
 	<!-- 注解驱动：
 		使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
		mvc:annotation-driven默认加载很多的参数绑定方法，
		比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
		实际开发时使用mvc:annotation-driven
 	 --> 
 	<mvc:annotation-driven></mvc:annotation-driven> 
 	
 	<!-- 处理器映射器 将bean的name作为url进行查找 ，需要在配置Handler时指定beanname（就是url） 
	所有的映射器都实现 HandlerMapping接口。
	-->
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />	
		
	<!--简单url映射  -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<!-- 对itemsController1进行url映射，url是/queryItems1.action -->
				<prop key="/queryItems1.action">itemsController1</prop>
				<prop key="/queryItems2.action">itemsController1</prop>
				<prop key="/queryItems3.action">itemsController2</prop>
				
			</props>
		</property>
	</bean>
 	
 	
 	<!-- 配置视图解析器 
 		  解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
 	-->
 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp"/>
 	</bean>
 
</beans>